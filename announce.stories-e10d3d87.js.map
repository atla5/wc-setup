{"version":3,"file":"announce.stories-e10d3d87.js","sources":["../src/_helpers/storageUtility.js","../src/announce/announce.js","../src/announce/bulib-announce.js","../src/announce/announce.stories.mdx"],"sourcesContent":["\nconst DEBUG = true;\nconst DEFAULT_STORAGE_EXPIRATION_TIME = 1000 * 60 * 60 * 24 * 3; // 3 days\n\nfunction _logToConsole(msg){ if(DEBUG){ console.log(\"_storageUtility) \" + msg); }}\n\n/** try reading a value from local memory with a given fallback */\nexport function readExpiringLocalValue(keyName, fallback){\n  let valueToReturn = fallback || false;\n  try{\n    // look in localStorage for our announcement-dismissed variables\n    let storedValue = localStorage.getItem(keyName);\n    let lastUpdated = localStorage.getItem(keyName+\"-when\");\n    \n    // if both localStorage values are present...\n    if(!!storedValue && !!lastUpdated){\n\n      // if it hasn't 'expired', query the value : \n      if( (Date.now() - lastUpdated) < DEFAULT_STORAGE_EXPIRATION_TIME){\n        valueToReturn = localStorage.getItem(keyName) == \"true\";\n        _logToConsole(`unexpired '${keyName}' value of '${storedValue}' read from localStorage`);\n\n      // if it has expired, reset/remove it\n      }else{\n        localStorage.removeItem(keyName);\n        localStorage.removeItem(keyName+\"-when\");\n        _logToConsole(`expired '${keyName}*' values have been removed. will be sending fallback of '${fallback}'`);\n      }\n    }\n  }catch(exception){\n    _logToConsole(`exception trying to get item '${keyName}' from localStorage: '${exception.message}'. returning fallback '${fallback}' instead`);\n    valueToReturn = fallback || false;\n  }finally{\n    return valueToReturn;\n  }\n}\n\n/** try setting a value from local memory with a timestamp of when it was set */\nexport function setExpiringLocalValue(keyName, value){\n  try{ // note: safari breaks with a security error any time 'localStorage' is accessed\n    localStorage.setItem(keyName, value); \n    localStorage.setItem(keyName+\"-when\", Date.now()); \n    _logToConsole(`key '${keyName}' successfully set to value '${value}'.`)\n  }\n  catch(exception){ \n    _logToConsole(\"exception trying to setItem in localStorage: \" + exception.message); \n  }\n}","import {LitElement, html} from 'lit-element/lit-element';\n\nimport {readExpiringLocalValue, setExpiringLocalValue} from '../_helpers/storageUtility';\n\nconst primo_specific_padding = html`\n  <style type=\"text/css\">\n    /* site-specific code for primo's announce-banner.js - adds padding below the search bar */ \n    prm-search-bar { padding-bottom: var(--primo-announce-padding, 60px); }\n    .__xs prm-search-bar, .__sm prm-search-bar { padding-bottom: var(--primo-announce-padding-small, 68px); }\n  </style>\n`;\n\n/**\n * display time-sensitive message, call-to-action across the top of a screen\n */\nexport default class BULAnnounce extends LitElement {\n\n  // don't need 'slot' functionality, so lets use Light DOM\n  createRenderRoot(){ return this; }\n\n  static get properties() {\n    return {\n      /** unique identifier */\n      code: {type: String},\n      /** information to display to the user */\n      message: {type: String},\n\n      /** (optional) main action displaying the */\n      cta_text: {type: String},\n      /** (optional) link the user should click to address/learn more about the message */\n      cta_url: {type: String},\n      /** (optional) type of message to display (determine ) [info, success, alert, warn] */\n      severity: {type: String},\n      \n      /** (debugging) set the status to dismissed */\n      dismissed: {type: Boolean, reflect: true},\n      /** (debugging) enable logging (click tracking)  */\n      debug: {type: Boolean},\n      /** (debugging) disable show/hide check, cta  */\n      prevent_action: {type: Boolean}\n    };\n  }\n\n  render(){\n    let icon = \"\";\n    switch(this.severity){ // material icon code [https://material.io/resources/icons/]\n      case \"success\": icon = \"check_circle\"; break;\n      case \"alert\":   icon = \"announcement\"; break;\n      case \"warn\":    icon = \"report_problem\"; break;\n      case \"info\":\n      default:        icon = \"info\"; break;\n    }\n    let sanitized_message = this.message? this.message.replace(/&#39;/g, \"'\") : \"this is a default message\";\n  \n    return html`\n      ${ window.location.pathname.includes(\"primo-explore\") && (this.debug || !this._getDismissedValue()) ? primo_specific_padding: html``}\n      <div class=\"announce-banner${ this.severity != undefined? \" \"+this.severity : \"\"}\" disabled=\"${this._getDismissedValue()}\">\n        <i class=\"material-icons\">${icon}</i>\n        <span class=\"message\">${sanitized_message}</span>\n        ${!!this.cta_url? html`<span class=\"cta\"><a href=\"${this.cta_url}\">${this.cta_text}</a></span>`: ``}\n        <button type=\"button\" @click=\"${(e) => this._toggleDismissed()}\">\n          <i class=\"material-icons\">close</i>&nbsp;<span class=\"txtv\">DISMISS</span>\n        </button>\n      </div>\n    `;\n  }\n\n  /** \n   * attempt to gather dismissal information from localStorage (fallback to 'false') \n   */\n  _getDismissedValue(){\n    if(this.hasAttribute(\"dismissed\")){\n      // only return false if it's explicitly set to \"false\"\n      return this.hasAttribute(\"dismissed\") && this.getAttribute(\"dismissed\") !== \"false\";\n    }else{\n      return readExpiringLocalValue(this._dismissedId(), false) || false;\n    }\n  }\n\n  _dismissedId(){\n    let dismissed_id = \"announcement-dismissed\";\n    \n    try{ dismissed_id += \"-\"+this.code; }\n    catch(exception){ this._logToConsole(\"error slugifying message to get new id: \" + exception.message); }\n\n    return dismissed_id;\n  }\n\n  _toggleDismissed(){\n    let value_before = this._getDismissedValue();\n    \n    // auto-update the property and attribute value for the currently loaded tag\n    this.setAttribute(\"dismissed\", !value_before);\n\n    // ensure the component updates (re-renders)\n    this._logToConsole(`dismiss clicked, session's' '${this._dismissedId()}' value '${value_before}'->'${this._getDismissedValue()}'`);\n    this.requestUpdate();\n\n    // save this updated setting in the localStorage\n    setExpiringLocalValue(this._dismissedId(), !value_before);\n  }\n\n  _logToConsole(message){\n    if(this.debug){ console.log(\"bulib-announce) \" + message); }\n  }\n}\n","import BULAnnounce from \"./announce\";\n\nwindow.customElements.define('bulib-announce', BULAnnounce);","import { Story, Preview, Meta, Props, html, withKnobs, withWebComponentsKnobs } from '@open-wc/demoing-storybook';\nimport './bulib-announce.js';\n\n<Meta \n  title=\"Web Components|bulib-announce\"\n  decorators={[withKnobs, withWebComponentsKnobs]}\n  parameters={{\n    component: \"bulib-announce\",\n    options: { selectedPanel: \"storybookjs/knobs/panel\" },\n  }}\n/>\n\n# Announcement Banner Component\n\nUsed to show site-wide, time-sensitive, dismissable chunk of information with varying severity, a prominent message, \n  and a clear call to action.\n\n## Usages \n\n### Default Component\n\nby default, `bulib-announce` displays with a default message with an `info`-level severity and no call to action\n\n<Preview withToolbar>\n  <Story name=\"basic\">\n    {html`<bulib-announce debug></bulib-announce>`}\n  </Story>\n</Preview>\n\n### Custom Message and Severity\n\nSpecifying a `severity` will alter its color and icon, and should be complimentary to the specified `message`.\n\n<Preview withToolbar>\n  <Story name=\"custom-message-severity\">\n    {html`\n      <bulib-announce debug code=\"severity-info\" severity=\"info\" message=\"Situation-independent information\"></bulib-announce>\n      <hr />\n      <bulib-announce debug code=\"severity-success\" severity=\"success\" message=\"A user action has been completed or verified\"></bulib-announce>\n      <hr />\n      <bulib-announce debug code=\"severity-warn\" severity=\"warn\" message=\"Something is wrong, but it's not an emergency\"></bulib-announce>\n      <hr />\n      <bulib-announce debug code=\"severity-alert\" severity=\"alert\" message=\"Something is very wrong and needs immediate attention\"></bulib-announce>\n    `}\n  </Story>\n</Preview>\n\n### Custom Calls-to-Actions\n\nYou can also specify a call-to-action text (`cta_text`) and url (`cta_url`). \n\n<Preview withToolbar>\n  <Story name=\"custom-signin-cta\">\n    {html`\n      <bulib-announce debug code=\"signin-cta\" severity=\"info\" message=\"Sign in to view 'My Favorites'\" \n        cta_text=\"Sign In\" cta_url=\"https://www.bu.edu/library/account/\"></bulib-announce>\n    `}\n  </Story>\n</Preview>\n\n\n### Banner Dismissal\n\nIn order to not annoy the user (by presenting them with irrelevant or unwanted information), banner \n  messages can be hidden by being dismissed (by setting them to `disabled`).\n\n\n#### Session Memory (default)\n\nBy default, we try to remember which banners have and haven't been dismissed by using the `src/_helpers/storageUtility`,\n  and look into the user's `localStorage` for the `announce-dismissal` for that specific `code`. \n\n<Preview withToolbar>\n  <Story name=\"dismissed-memory\">\n    {html`\n      <bulib-announce debug severity=\"info\" code=\"one\"></bulib-announce> <hr />\n      <bulib-announce debug severity=\"warn\" code=\"two\"></bulib-announce> <hr />\n      <bulib-announce debug severity=\"alert\" code=\"three\"></bulib-announce> <hr />\n      <bulib-announce debug severity=\"success\" code=\"four\"></bulib-announce>\n    `}\n  </Story>\n</Preview>\n\n\n#### Manual Override\n\nFor debugging purposes, this can be done manually - in which case it will _always_ be hidden (`dismissed=\"true\"`, `dismissed`) \n  or _always_ shown (`dismissed=\"false\"`) regardless of what's been saved in the local storage.\n\n<Preview withToolbar>\n  <Story name=\"dismissed-manual\">\n    {html`\n      <bulib-announce debug code=\"dismissed-present\" dismissed message=\"'dismissed' is present, but unspecified\"></bulib-announce> <hr />\n      <bulib-announce debug code=\"dismissed-true\" dismissed=\"true\" message=\"'dismissed' is present and set to 'true'\"></bulib-announce> <hr />\n      <bulib-announce debug code=\"dismissed-false\" dismissed=\"false\" message=\"'dismissed' is present and set to 'false'\"></bulib-announce>\n    `}\n  </Story>\n</Preview>\n\n_NOTE: clicking the DISMISS button will immediately toggle the `dismiss` value for the banner, save that value in local storage, and switch that banner's dismissal to manual mode until page is reloaded_\n\n\n## API - Properties \n\n<Props of=\"bulib-announce\" />\n\n"],"names":["DEFAULT_STORAGE_EXPIRATION_TIME","_logToConsole","msg","console","log","primo_specific_padding","html","customElements","define","LitElement","createRenderRoot","this","code","type","String","message","cta_text","cta_url","severity","dismissed","Boolean","reflect","debug","prevent_action","render","icon","sanitized_message","replace","window","location","pathname","includes","_getDismissedValue","undefined","e","_toggleDismissed","hasAttribute","getAttribute","keyName","fallback","valueToReturn","storedValue","localStorage","getItem","lastUpdated","Date","now","removeItem","exception","readExpiringLocalValue","_dismissedId","dismissed_id","value_before","setAttribute","requestUpdate","value","setItem","setExpiringLocalValue","layoutProps","MDXLayout","MDXContent","components","props","mdx","mdxType","Meta","title","decorators","withKnobs","withWebComponentsKnobs","parameters","component","options","selectedPanel","parentName","Preview","withToolbar","Story","name","Props","of","isMDXComponent","basic","makeStoryFn","story","mdxSource","customMessageSeverity","customSigninCta","dismissedMemory","dismissedManual","componentMeta","includeStories","mdxStoryNameToId","docs","page","AddContext"],"mappings":"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"}